# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def even_fibonaci(n):
    """
    even_fibonnaci finds numbers that are elements of fibonnaci sequence and are even, below (not including) n value
    """
    # the problem starts with 1 and 2
    fib_one = 1
    fib_two = 2
    print fib_one, fib_two # print current fib numbers
    suma = 0
    while fib_one < n and fib_two < n:
        # find even fibonacci numbers and assign new sum value
        if fib_one%2 == 0:
            suma = suma + fib_one
        if fib_two%2 == 0:
            suma = suma + fib_two
        print "this is sum: ",  suma
        # assign next fibonnaci numbers
        fib_one = fib_two + fib_one
        fib_two = fib_two + fib_one
        print fib_one, fib_two

# call examples
even_fibonaci(4000000)
even_fibonaci(400)
even_fibonaci(1000000)
even_fibonaci(3000)